# making the column names lower case
colnames(dmv_foods19_20) <- tolower(colnames(dmv_foods19_20))
#need to convert disbursement_date into a date field yyyy-mm-dd
#need to convert the zipcodes into a 5-digit field.
#filtering for DC, MD, VA
dmv_foods19_20 <- dmv_foods19_20 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods19_20 <- dmv_foods19_20 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods19_20 %>%
head()
#why did disbursement date produce NAs?
#making zip codes right
dmv_foods19_20 <- dmv_foods19_20%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods19_20 %>%
head()
#Putting the search terms into the 19-20 dataframe
dmv_foods19_20 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#This procudes a tibble with 42,918 rows.
# Next step is to save the purpose terms to a search_terms variable.
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
dmv_foods19_20 <- dmv_foods19_20 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#This matches the other method of using filter and str_detects and produces the same 42,918 rows.
#importing data
dmv_foods17_18<- read_delim("~/Downloads/data1718.txt", delim = "|", col_names = column_names)
dmv_foods17_18 %>%
head()
#establishing column names
column_names <- c("committee_id", "AMNDT_IND", "report_year", "report_type", "image_number", "line_number", "FORM_TP_CD", "SCHED_TP_CD", "recipient_name", "recipient_city", "recipient_state", "zip_code", "DISBURSEMENT_DATE", "DISBURSEMENT_AMOUNT", "TRANSACTION_PGI", "disbursement_description", "CATEGORY", "CATEGORY_DESC", "MEMO_CD", "MEMO_TEXT", "ENTITY_TP", "SUB_ID", "FILE_NUM", "TRAN_ID", "BACK_REF_TRAN_ID")  # Add your column names here
# making the column names lower case
colnames(dmv_foods17_18) <- tolower(colnames(dmv_foods17_18))
dmv_foods17_18 %>%
head()
#filter for only DC, MD, VA
dmv_foods17_18 <- dmv_foods17_18 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods17_18 <- dmv_foods17_18 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods17_18 %>%
head()
#making zip codes right
dmv_foods17_18 <- dmv_foods17_18%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods17_18 %>%
head()
dmv_foods17_18 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#produces a tibble with 56,735 rows
# Next step is to save the purpose terms to a search_terms variable.
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
dmv_foods17_18 <- dmv_foods17_18 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#matches the filter of 56,735 rows.
dmv_foods13_14<- read_delim("~/Downloads/data1314.txt", delim = "|", col_names = column_names)
dmv_foods13_14 %>%
head()
#establishing column names
column_names <- c("committee_id", "AMNDT_IND", "report_year", "report_type", "image_number", "line_number", "FORM_TP_CD", "SCHED_TP_CD", "recipient_name", "recipient_city", "recipient_state", "zip_code", "DISBURSEMENT_DATE", "DISBURSEMENT_AMOUNT", "TRANSACTION_PGI", "disbursement_description", "CATEGORY", "CATEGORY_DESC", "MEMO_CD", "MEMO_TEXT", "ENTITY_TP", "SUB_ID", "FILE_NUM", "TRAN_ID", "BACK_REF_TRAN_ID")  # Add your column names here
# making the column names lower case
colnames(dmv_foods13_14) <- tolower(colnames(dmv_foods13_14))
dmv_foods13_14 %>%
head()
#filter for only DC, MD, VA
dmv_foods13_14 <- dmv_foods13_14 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods13_14 <- dmv_foods13_14 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods13_14 %>%
head()
#making zip codes right
dmv_foods13_14 <- dmv_foods13_14%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods13_14 %>%
head()
dmv_foods13_14 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#produces a tibble with 47,129 rows
# Next step is to save the purpose terms to a search_terms variable.
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
dmv_foods13_14 <- dmv_foods13_14 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#matches the filter of 47,129 rows.
# importing data
dmv_foods11_12<- read_delim("~/Downloads/data1112.txt", delim = "|", col_names = column_names)
dmv_foods11_12 %>%
head()
#establishing column names
column_names <- c("committee_id", "AMNDT_IND", "report_year", "report_type", "image_number", "line_number", "FORM_TP_CD", "SCHED_TP_CD", "recipient_name", "recipient_city", "recipient_state", "zip_code", "DISBURSEMENT_DATE", "DISBURSEMENT_AMOUNT", "TRANSACTION_PGI", "disbursement_description", "CATEGORY", "CATEGORY_DESC", "MEMO_CD", "MEMO_TEXT", "ENTITY_TP", "SUB_ID", "FILE_NUM", "TRAN_ID", "BACK_REF_TRAN_ID")  # Add your column names here
# making the column names lower case
colnames(dmv_foods11_12) <- tolower(colnames(dmv_foods11_12))
dmv_foods11_12 %>%
head()
#filter for only DC, MD, VA
dmv_foods11_12 <- dmv_foods11_12 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods11_12 <- dmv_foods11_12 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods11_12 %>%
head()
#making zip codes right
dmv_foods11_12 <- dmv_foods11_12%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods11_12 %>%
head()
dmv_foods11_12 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#produces a tibble with 42,479 rows
# Next step is to save the purpose terms to a search_terms variable.
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
dmv_foods11_12 <- dmv_foods11_12 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#matches the filter of 42,479 rows.
#establishing column names and search terms to use in each dataset
column_names <- c("committee_id", "amndt_ind", "report_year", "report_type", "image_number", "line_number", "form_tp_cd", "sched_tp_cd", "recipient_name", "recipient_city", "recipient_state", "zip_code", "disbursement_date", "disbursement_amount", "transaction_pgi", "disbursement_description", "category", "category_desc", "memo_cd", "memo_text", "entity_type", "sub_id", "file_num", "tran_id", "back_ref_tran_id")  # Add your column names here
#search_terms to use in the loops and in each dataset
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
#2015-2016 data
new_food_data <- read_delim("~/Downloads/oppexp.txt", delim = "|", col_names = column_names)
#need to convert disbursement_date into a date field yyyy-mm-dd
#need to convert the zipcodes into a 5-digit field.
new_food_data <- new_food_data %>%
filter(state == "DC"| state == "MD" | state == "VA")
new_food_data <- new_food_data %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#use strings and then test them all togeter
category_totals_1516 <- dmv_foods_1516 %>%
group_by(purpose) %>%
count() %>%
arrange(desc(n))
# filter(str_detect the terms to dmv_food when I am ready)
# and do it like this
dmv_foods_1516 %>%
filter(str_detect(purpose, "FOOD") |
str_detect(purpose, "BEVERAGE") |
str_detect(purpose, "DINING") |
str_detect(purpose, "MEAL") |
str_detect(purpose, "CATERING")|
str_detect(purpose, "DRINK")|
str_detect(purpose, "EVENT"))
#This procudes a tibble with 44,057 rows.
dmv_foods_1516 <-  dmv_foods_1516 %>%
filter(str_detect(purpose, str_c(search_terms, collapse = "|")))
#Loading 21-22
dmv_foods21_22 <- read_delim("~/Downloads/oppexp-2.txt", delim = "|", col_names = column_names)
dmv_foods21_22 %>%
head()
#Loading 21-22
dmv_foods21_22 <- read_delim("~/Downloads/oppexp-2.txt", delim = "|", col_names = column_names)
dmv_foods21_22 %>%
head()
#filtering for DC, MD, VA
dmv_foods21_22 <- dmv_foods21_22 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods21_22 <- dmv_foods21_22%>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods21_22 %>%
head()
#chanign the zip_codes
dmv_foods21_22 <- dmv_foods21_22%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
#Putting the search terms into the 22-23 dataframe
dmv_foods21_22 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#This procudes a tibble with 11,494 rows.
# Next step is to save the purpose terms to a search_terms variable.
dmv_foods21_22 <- dmv_foods21_22%>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#This matches the other method of using filter and str_detects and produces the same 11,494 rows.
#importing data
dmv_foods19_20 <- read_delim("~/Downloads/data1920.txt", delim = "|", col_names = column_names)
dmv_foods19_20 %>%
head()
#filtering for DC, MD, VA
dmv_foods19_20 <- dmv_foods19_20 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods19_20 <- dmv_foods19_20 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods19_20 %>%
head()
#why did disbursement date produce NAs?
#making zip codes right
dmv_foods19_20 <- dmv_foods19_20%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods19_20 %>%
head()
#Putting the search terms into the 19-20 dataframe
dmv_foods19_20 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#This procudes a tibble with 42,918 rows.
dmv_foods19_20 <- dmv_foods19_20 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#This matches the other method of using filter and str_detects and produces the same 42,918 rows.
#importing data
dmv_foods17_18<- read_delim("~/Downloads/data1718.txt", delim = "|", col_names = column_names)
dmv_foods17_18 %>%
head()
#filter for only DC, MD, VA
dmv_foods17_18 <- dmv_foods17_18 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods17_18 <- dmv_foods17_18 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods17_18 %>%
head()
#making zip codes right
dmv_foods17_18 <- dmv_foods17_18%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods17_18 %>%
head()
dmv_foods17_18 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#produces a tibble with 56,735 rows
# Next step is to save the purpose terms to a search_terms variable.
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
dmv_foods17_18 <- dmv_foods17_18 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#matches the filter of 56,735 rows.
dmv_foods13_14<- read_delim("~/Downloads/data1314.txt", delim = "|", col_names = column_names)
dmv_foods13_14 %>%
head()
#filter for only DC, MD, VA
dmv_foods13_14 <- dmv_foods13_14 %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA")
#establishing a date column
dmv_foods13_14 <- dmv_foods13_14 %>%  mutate(disbursement_date=mdy(disbursement_date))
dmv_foods13_14 %>%
head()
#making zip codes right
dmv_foods13_14 <- dmv_foods13_14%>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L))
dmv_foods13_14 %>%
head()
dmv_foods13_14 %>%
filter(str_detect(disbursement_description, "FOOD") |
str_detect(disbursement_description, "BEVERAGE") |
str_detect(disbursement_description, "DINING") |
str_detect(disbursement_description, "MEAL") |
str_detect(disbursement_description, "CATERING")|
str_detect(disbursement_description, "DRINK")|
str_detect(disbursement_description, "EVENT"))
#produces a tibble with 47,129 rows
#Plugging in the search terms
dmv_foods13_14 <- dmv_foods13_14 %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
#matches the filter of 47,129 rows.
# importing data
dmv_foods11_12<- read_delim("~/Downloads/data1112.txt", delim = "|", col_names = column_names)
dmv_foods11_12 %>%
head()
knitr::opts_chunk$set(echo = TRUE)
```{r}
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
# Install and load the blsAPI package
install.packages("blsAPI")
library(blsAPI)
# Install and load the blsAPI package
install.packages("blsAPI")
knitr::opts_chunk$set(echo = TRUE)
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
#libraries
library(tidyverse)
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
knitr::opts_chunk$set(echo = TRUE)
#libraries
library(tidyverse)
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
# Install and load the blsAPI package
install.packages("blsAPI")
library(blsAPI)
# Install and load the blsAPI package
install.packages("blsAPI")
library(blsAPI)
# Install and load the blsAPI package
install.packages("blsAPI")
# Check the version of the blsAPI package
installed.packages()["blsAPI", "Version"]
# Check the version of the blsAPI package
installed.packages(blsAPI)["blsAPI", "Version"]
install.packages("blsAPI")
library(blsAPI)
# Check the version of the blsAPI package
installed.packages(blsAPI)["blsAPI", "Version"]
# Check the version of the blsAPI package
installed.packages()["blsAPI", "Version"]
knitr::opts_chunk$set(echo = TRUE)
#libraries
library(tidyverse)
#establishing column names and search terms to use in each dataset
column_names <- c("committee_id", "amndt_ind", "report_year", "report_type", "image_number", "line_number", "form_tp_cd", "sched_tp_cd", "recipient_name", "recipient_city", "recipient_state", "zip_code", "disbursement_date", "disbursement_amount", "transaction_pgi", "disbursement_description", "category", "category_desc", "memo_cd", "memo_text", "entity_type", "sub_id", "file_num", "tran_id", "back_ref_tran_id")  # Add your column names here
#search_terms to use in the loops and in each dataset
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
#establishing and trying out things for the loop
dmv_foods_combined <- tibble()
# Define a list of years
cycles <- c('1112', '1314', '1516','1718','1920','2122','2324')
# Create a for loop to execute functions
for (cycle in cycles) {
# need to build the path to the .txt file
path <- paste0("~/Downloads/data", cycle,".txt")
print(path)
dmv_food <- read_delim(path, delim = "|", col_names = column_names)
dmv_food_filtered <- dmv_food %>%
filter(recipient_state == "DC"| recipient_state == "MD" | recipient_state == "VA") %>%
filter(entity_type != "IND") %>%
mutate(zip_code = str_sub(zip_code, start=1L, end=5L)) %>%
mutate(disbursement_date=mdy(disbursement_date)) %>%
filter(str_detect(disbursement_description, str_c(search_terms, collapse = "|")))
dmv_foods_combined <- bind_rows(dmv_foods_combined, dmv_food_filtered)
}
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
#establishing column names and search terms to use in each dataset
column_names <- c("committee_id", "amndt_ind", "report_year", "report_type", "image_number", "line_number", "form_tp_cd", "sched_tp_cd", "recipient_name", "recipient_city", "recipient_state", "zip_code", "disbursement_date", "disbursement_amount", "transaction_pgi", "disbursement_description", "category", "category_desc", "memo_cd", "memo_text", "entity_type", "sub_id", "file_num", "tran_id", "back_ref_tran_id")  # Add your column names here
#search_terms to use in the loops and in each dataset
search_terms <- c("FOOD", "BEVERAGE", "DINING", "MEAL", "CATERING", "DRINK", "EVENT")
library(tidyverse)
attendance <- read_csv("https://dwillis.github.io/sports-data-files/attendance.csv")
attendance_longer <- attendance |>
```
attendance_longer <- attendance
View(attendance_longer)
View(attendance)
View(attendance)
View(attendance_longer)
View(attendance)
attendance_longer <- attendance %>%
pivot_longer()
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20"))names_to = "Year")
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20")) names_to = "Year",)
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20")) names_to = "Year", values_to = "Attendance"))
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20"), names_to = "Year", values_to = "Attendance")
View(attendance_longer)
attendance_two_years <- attendance_longer |>
filter(years == 2019 | years == 2020)
attendance_two_years <- attendance_longer |>
filter(years == 2019 | years == 2020)
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2020)
View(attendance_two_years)
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2022) %>%
```
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20"), names_to = "Year", values_to = "Attendance")
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2022) %>%
```
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20"), names_to = "Year", values_to = "Attendance")
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2022) %>%
```
View(attendance_two_years)
attendance_longer <- attendance %>%
pivot_longer(cols = starts_with("20"), names_to = "Year", values_to = "Attendance")
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2022) %>%
```
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2022)
attendance_two_years <- attendance_longer |>
filter(Year == 2019 | Year == 2022) %>%
na.omit()
attendance_wide <- attendance_two_years |>
pivot_wider(names_from = Year, values_from = Attendance)
View(attendance_wide)
attendance_wide <- attendance_two_years |>
pivot_wider(names_from = Year, values_from = Attendance) %>%
na.omit()
attendance_wide <- attendance_wide |>
mutate(perc_change = (2022-2019/2019)*100)
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`/`2019`)*100)
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`/`2019`)*100)
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`)/`2019`*100)
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`)/`2019`*100) %>%
arrange(desc(perc_change))
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`)/`2019`*100) %>%
arrange(perc_change)
attendance_wide <- attendance_wide |>
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`)/`2019`*100) %>%
arrange(desc(perc_change))
attendance_wide <- attendance_wide |>
mutate(perc_change = (`2022`-`2019`)/`2019`*100) %>%
arrange(desc(perc_change))
attendance_wide %>%
filter(Confernece == "Pac-12")
attendance_wide %>%
filter(Conference == "Pac-12")
knitr::opts_chunk$set(echo = TRUE)
wbb+_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
setwd("~/Documents/GitHub/dylan_repository")
#loading data
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
library(readr)
wbb_rosters_2022_23 <- read_csv("wbb_data_story/data/wbb_rosters_2022_23.csv")
View(wbb_rosters_2022_23)
head(wbb_rosters_22_23)
head(wbb_rosters_2022_23)
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
setwd("~/Documents/GitHub/dylan_repository/wbb_data_story/data")
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
head(wbb_rosters_2022_23)
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
head(wbb_rosters_2022_23)
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
head(wbb_rosters_2022_23)
wbb_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
wbb_rosters_2022_23 %>%
group_by(state_clean) %>%
count() %>%
arrange(desc(n))
knitr::opts_chunk$set(echo = TRUE)
wbb_rosters_22_23 <- read_csv("data/wbb_rosters_2022_23.csv")
head(wbb_rosters_22_23)
wbb_rosters_22_23 %>%
group_by(state_clean) %>%
filter(state_clean == "MD")
wbb_rosters_22_23 %>%
group_by(state_clean) %>%
filter(state_clean == "MD") %>%
count()
wbb_rosters_22_23 %>%
group_by(state_clean) %>%
count() %>%
arrange(desc(n))
