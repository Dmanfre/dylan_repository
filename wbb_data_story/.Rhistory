labor_total = "B23025_003",
labor_employed = "B23025_004",
labor_unemployed = "B23025_005",
education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022",
public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005",
poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010",
rent = "B25064_001",
real_estate_tax_median = "B25103_001",
real_estate_tax_aggregate = "B25090_001"),
state = "MD",
year = 2018) %>%
mutate(year = 2018)
View(md_2018)
#2021 ACS
ACS_2021 <- load_variables(2021, "acs5")
View(ACS_2021)
md_2018 <- get_acs(geography = "state",
variables = c(medi_house_income = "B19013_001",
population = "B01003_001"),
state = "MD",
year = 2018) %>%
mutate(year = 2018)
View(md_2018)
md_2018 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
state = "MD",
year = 2021) %>%
mutate(year = 2021)
#Get this to show the population data of all the Maryland towns
md_2021 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
state = "MD",
year = 2021) %>%
mutate(year = 2021)
rm(list = "net", "md_2018", "plays_2023", "ACS_2007", "ACS_2008", "ACS_2009", "ACS_2010", "ACS_2013", "ACS_2018")
rm(list = "saves_ga")
logs <-  read_csv("https://dwillis.github.io/sports-data-files/footballlogs1122.csv")
View(logs)
logs <- logs %>%
mutate(differential = TeamScore - OpponentScore )
logs <- logs %>%
lm(differential ~ Penalties, data=logs)
summary(logs)
logs %>%
lm(differential ~ Penalties, data=logs)
model1 <-  logs %>%
lm(differential ~ Penalties, data=logs)
model1 <-  logs %>%
lm(differential ~ Penalties, data=logs)
model1 <- lm(differential ~ Penalties, data=logs)
model1 <- lm(differential ~ Penalties, data=logs)
summary(model1)
model2 <- lm(differential ~ Penalties + Fumbles, data=logs)
summary(model2)
model2 <- lm(differential ~ Penalties + FirstDownPen, data=logs)
summary(model2)
model2 <- lm(differential ~ Penalties + Interceptions, data=logs)
summary(model2)
model2 <- lm(differential ~ Fumbles + Interceptions, data=logs)
summary(model2)
model2 <- lm(differential ~ TotalTurnovers + Interceptions, data=logs)
summary(model2)
model2 <- lm(differential ~ Fumbles + Interceptions, data=logs)
summary(model2)
model2 <- lm(differential ~ Fumbles + Interceptions, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownPen + Interceptions, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownPen + Interceptions + Fumbles, data=logs)
summary(model2)
model2 <- lm(differential ~ + Penalties + FirstDownPen + Interceptions + Fumbles, data=logs)
summary(model2)
library(Hmisc)
knitr::opts_chunk$set(echo = TRUE)
state_code <- "24"
county_code <- "*"
geography <- "place"
# Retrieve population data for Maryland towns
md_town_pop <- get_decennial(geography = geography, state = state_code, county = county_code)
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
state_code <- "24"
county_code <- "*"
geography <- "place"
# Retrieve population data for Maryland towns
md_town_pop <- get_decennial(geography = geography, state = state_code, county = county_code)
#API key
Sys.setenv(CENSUS_API_KEY = "5cb2b9c628a1d1329c5bf4d36fe4435c6501efc8", overwrite = TRUE)
state_code <- "24"
county_code <- "*"
geography <- "place"
# Retrieve population data for Maryland towns
md_town_pop <- get_decennial(geography = geography, state = state_code, county = county_code)
state_code <- "24"
county_code <- "*"
geography <- "place"
# Retrieve population data for Maryland towns
md_town_pop <- get_acs(geography = geography, state = state_code, county = county_code)
md_2021 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
state = "MD",
year = 2021) %>%
mutate(year = 2021)
View(md_2021)
md_2021 <- get_acs(geography = "county",
variables = c(population = "B01003_001"),
state = "MD",
year = 2021) %>%
mutate(year = 2021)
md_2021 <- get_acs(geography = "place",
variables = c(population = "B01003_001"),
state = "MD",
year = 2021) %>%
mutate(year = 2021)
usa_2021 <- get_acs(geography = "nation",
variables = c(population = "B01003_001"),
#state = "MD",
year = 2021) %>%
mutate(year = 2021)
usa_2021 <- get_acs(geography = "nation",
variables = c(population = "B01003_001"),
year = 2021) %>%
mutate(year = 2021)
CENSUS_API_KEY
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
#API key
Sys.setenv(CENSUS_API_KEY = "5cb2b9c628a1d1329c5bf4d36fe4435c6501efc8", overwrite = TRUE)
#2021 ACS
ACS_2021 <- load_variables(2021, "acs5")
#Get this to show the population data of all the Maryland towns
md_2021 <- get_acs(geography = "place",
variables = c(population = "B01003_001"),
state = "MD",
year = 2021) %>%
mutate(year = 2021)
#GEOID will be key to matching the places up together.
usa_2021 <- get_acs(geography = "nation",
variables = c(population = "B01003_001"),
year = 2021) %>%
mutate(year = 2021)
usa_2021 <- get_acs(geography = "us",
variables = c(population = "B01003_001"),
year = 2021) %>%
mutate(year = 2021)
View(usa_2021)
usa_2021 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
year = 2021) %>%
mutate(year = 2021)
View(usa_2021)
states_2021 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
year = 2021) %>%
mutate(year = 2021)
View(states_2021)
states_2021 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
year = 2022) %>%
mutate(year = 2022)
#2022 ACS
ACS_2022 <- load_variables(2022, "acs1")
View(ACS_2022)
states_2022 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
View(states_2022)
md_2022 <- get_acs(geography = "place",
variables = c(population = "B01003_001"),
state = "MD",
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
states_2023 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
survey = "acs1",
year = 2023) %>%
mutate(year = 2023)
states_2022 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
wbb_rosters_22_23 %>%
filter(conference == power_five)
#state counts
wbb_rosters_22_23 %>%
group_by(state_clean) %>%
filter(state_clean == "MD") %>%
count()
wbb_rosters_22_23 %>%
filter(is.na(state_clean))
_
wbb_rosters_22_23 %>%
group_by(state_clean) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(is.na(state_clean))
wbb_rosters_22_23 %>%
group_by(state_clean) %>%
count() %>%
arrange(desc(n))
state_counts <- wbb_rosters_22_23 %>%
group_by(state_clean) %>%
count() %>%
arrange(desc(n))
international_players <- wbb_rosters_22_23 %>%
filter(is.na(state_clean))
wbb_rosters_22_23 %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(confernce = power_five) %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(confernce == power_five) %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(conference == power_five) %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(conference == power_five) %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(conference == power_five) %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
wbb_rosters_22_23 %>%
filter(conference == power_five) %>%
#Issue: These numbers seem too low. Im trying to view how many players there are in the power 5 conferneces
```
wbb_rosters_22_23 %>%
filter(conference == power_five)
wbb_rosters_22_23 %>%
filter(conference == power_five) %>%
group_by(team)
View(wbb_rosters_22_23)
wbb_rosters_22_23 %>%
filter(conference == power_five)
wbb_rosters_22_23 %>%
filter(team == "Maryland")
wbb_rosters_22_23 %>%
filter(conference == "SEC")
wbb_rosters_22_23 %>%
filter(conference == power_five)
wbb_rosters_22_23 %>%
filter(conference %in% power_five)
p5_players <- wbb_rosters_22_23 %>%
filter(conference %in% power_five)
wbb_rosters_22_23 %>%
filter(conference %in% power_five) %>%
filter (state_clean == "MD")
wbb_rosters_22_23 %>%
filter (state_clean == "MD")
wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD")
wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD") %>%
#Produces 24 names
md_perc = (24 / 350)*100
wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD") %>%
#Produces 24 names
md_perc <-  (24 / 350)*100
md_perc <-  (24 / 350)*100
wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD") %>%
#Produces 24 names
md_p5_perc <-  (24 / 350)*100
md_p5_perc <-  (24 / 350)*100
p5_players %>%
group_by(confernece) %>%
count() %>%
arrange(desc(n))
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#Creating percents
p5_players %>%
mutate(perc = sum(n)/4))*100
#Creating percents
p5_players %>%
mutate(perc = sum(n)/4)*100
knitr::opts_chunk$set(echo = TRUE)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#libraries
library(tidyverse)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
p5_players %>%
mutate(perc = n/sum(n)*100)
p5_players %>%
mutate(perc = n/total(n)*100)
p5_players %>%
p5_players %>%
mutate(perc = n/(total(n)*100))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
p5_players %>%
mutate(perc = n/(total(n)*100))
p5_player %>%
summarize(total = sum(n))
p5_players %>%
summarize(total = sum(n))
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100)
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100))
p5_players <- wbb_rosters_22_23 %>%
filter(conference %in% power_five)
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
p5_players %>%
summarize(total = sum(n))
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100)
#Conference counts
p5_players %>%
group_by(conference) %>%
count(conf_players) %>%
arrange(desc(conf_players))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
p5_players <- p5_players %>%
mutate(perc = (conf_players / sum(conf_players)) * 100)
p5_players <- wbb_rosters_22_23 %>%
filter(conference %in% power_five)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
View(p5_players)
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
conf_player_counts <- conf_player_counts %>%
mutate(perc = (conf_players / sum(conf_players)) * 100)
View(conf_player_counts)
conf_player_counts <- conf_player_counts %>%
mutate(perc = conf_players / sum(conf_players) * 100)
conf_player_counts <- conf_player_counts %>%
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = sum(n))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n) %>%
mutate(perc = conf_players/sum(conf_players))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n) %>%
p5_players %>%
mutate(perc = conf_players/sum(conf_players))
p5_players %>%
mutate(perc = conf_players/sum(conf_players))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count()
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n) %>%
p5_players %>%
mutate(perc = conf_players/sum(conf_players))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
mutate(perc = n/sum(n))
r_counts <- p5_players %>%
group_by(conference) %>%
summarize(
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = sum(conference))
conf_player_counts <- p5_players %>%
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n())
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n())
arrange(desc(total)) %>%
mutate(perc = total/sum(total))
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = total/sum(total))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = total/sum(total)*100)
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100),1)
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100),1))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
from_maryland_p5 <-  wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD") %>%
#Produces 24 names
md_p5_perc <-  (24 / 350)*100
from_maryland_p5 <-  wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD")
conference_md <-from_maryland_p5 %>%
group_by(conference) %>%
count()
View(conference_md)
from_maryland_p5 %>%
group_by(hometown_clean) %>%
count()
