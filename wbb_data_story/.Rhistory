group_by(conference) %>%
count() %>%
arrange(desc(n))
#libraries
library(tidyverse)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
p5_players %>%
mutate(perc = n/sum(n)*100)
p5_players %>%
mutate(perc = n/total(n)*100)
p5_players %>%
p5_players %>%
mutate(perc = n/(total(n)*100))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
p5_players %>%
mutate(perc = n/(total(n)*100))
p5_player %>%
summarize(total = sum(n))
p5_players %>%
summarize(total = sum(n))
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100)
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100))
p5_players <- wbb_rosters_22_23 %>%
filter(conference %in% power_five)
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
p5_players %>%
summarize(total = sum(n))
p5_players <- p5_players %>%
mutate(perc = (n / sum(n)) * 100)
#Conference counts
p5_players %>%
group_by(conference) %>%
count(conf_players) %>%
arrange(desc(conf_players))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
p5_players <- p5_players %>%
mutate(perc = (conf_players / sum(conf_players)) * 100)
p5_players <- wbb_rosters_22_23 %>%
filter(conference %in% power_five)
#Conference counts
p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
View(p5_players)
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
conf_player_counts <- conf_player_counts %>%
mutate(perc = (conf_players / sum(conf_players)) * 100)
View(conf_player_counts)
conf_player_counts <- conf_player_counts %>%
mutate(perc = conf_players / sum(conf_players) * 100)
conf_player_counts <- conf_player_counts %>%
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = sum(n))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n)
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n) %>%
mutate(perc = conf_players/sum(conf_players))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n) %>%
p5_players %>%
mutate(perc = conf_players/sum(conf_players))
p5_players %>%
mutate(perc = conf_players/sum(conf_players))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count()
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
rename(conf_players = n) %>%
p5_players %>%
mutate(perc = conf_players/sum(conf_players))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
count() %>%
arrange(desc(n)) %>%
mutate(perc = n/sum(n))
r_counts <- p5_players %>%
group_by(conference) %>%
summarize(
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = sum(conference))
conf_player_counts <- p5_players %>%
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n())
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n())
arrange(desc(total)) %>%
mutate(perc = total/sum(total))
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = total/sum(total))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = total/sum(total)*100)
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100),1)
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100),1))
#Conference counts
conf_player_counts <- p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
from_maryland_p5 <-  wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD") %>%
#Produces 24 names
md_p5_perc <-  (24 / 350)*100
from_maryland_p5 <-  wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD")
conference_md <-from_maryland_p5 %>%
group_by(conference) %>%
count()
View(conference_md)
from_maryland_p5 %>%
group_by(hometown_clean) %>%
count()
model2 <- lm(differential ~ Penalties + FirstDownPen + Interceptions + Fumbles, data=logs)
summary(model2)
## Struggled a bit with this question. Is this a question where we would create a martrix?
model2 <- lm(differential ~ Penalties + Interceptions + Fumbles, data=logs)
summary(model2)
## Struggled a bit with this question. Is this a question where we would create a martrix?
knitr::opts_chunk$set(echo = TRUE)
conference_md <-from_maryland_p5 %>%
group_by(conference) %>%
count()
conference_md <-from_maryland_p5 %>%
group_by(conference) %>%
count()
#load libraries
library(tidyverse)
library(cfbfastR)
library(Hmisc)
model2 <- lm(differential ~ Penalties + Interceptions + Fumbles, data=logs)
summary(model2)
## Struggled a bit with this question. Is this a question where we would create a martrix?
model2 <- lm(differential ~ OffensivePlays + Interceptions + Fumbles, data=logs)
summary(model2)
## Struggled a bit with this question. Is this a question where we would create a martrix?
model2 <- lm(differential ~ FirstDownTotal + Interceptions + Fumbles, data=logs)
model2 <- lm(differential ~ FirstDownTotal + Interceptions + Fumbles, data=logs)
summary(model2)
## Struggled a bit with this question. Is this a question where we would create a martrix?
model2 <- lm(differential ~ FirstDownTotal + Interceptions + FirstDownPen, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + Interceptions + FirstDownPen, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + Interceptions + Fumbles, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + Interceptions + FirstDownPe, data=logs)
model2 <- lm(differential ~ FirstDownTotal + Interceptions + FirstDownPen, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + PenaltyYds + Fumbles, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + PenaltyYds + TotalTurnovers, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + PenaltyYds + TotalTurnovers, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + DefPenalties + TotalTurnovers, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownTotal + DefPenalties + TotalTurnovers, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYds + DefPenalties + TotalTurnovers, data=logs)
model2 <- lm(differential ~ DefYards + DefPenalties + TotalTurnovers, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + DefPenalties + FirstDownTotal, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + FirstDownTotal, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + FirstDownTotal, data=logs)
summary(model2)
model2 <- lm(differential ~ FirstDownPass + OffenseAvg + FirstDownTotal, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + FirstDownTotal, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + DefPlays, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + DefPlays, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffenseYards, data=logs)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffenseYds, data=logs)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + RushingAvg + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + PassingYds + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + DefPassingYds + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + DefAvg, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffensiveYards, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + DefAvg, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + DefFirstDownPass + DefAvg, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + DefAvg, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + DefPassingPct, data=logs)
summary(model2)
model2 <- lm(differential ~ DefYards + OffenseAvg + OffensiveYards, data=logs)
summary(model2)
logs %>%
min(differential)
logs %>%
summarize(mean_differential = mean(differential))
logs %>% %>%
logs %>% %>%
logs %>%
summarize(mean_differential = mean(differential))
logs %>%
group_by(differential) %>%
summarize(mean_differential = mean(differential))
logs %>%
group_by(differential) %>%
summarize(median_differential = median(differential))
logs %>%
group_by(differential) %>%
summarize(median_differential = median(differential))
logs %>%
group_by(differential) %>%
summarize(median_differential = median(differential))
logs %>%
group_by(differential) %>%
summarize(median_differential = median(differential))
logs %>%
group_by(differential) %>%
summarize(median_differential = median(differential))
logs %>%
group_by(differential) %>%
count() %>%
arrange(desc(n))
logs %>%
group_by(differential) %>%
count() %>%
arrange(desc(differential))
logs %>%
filter(differential < 7)
logs %>%
filter(differential < 7) %>%
arrange(desc(differential))
less_seven <- logs %>%
filter(differential < 7) %>%
arrange(desc(differential))
model3 <- lm(formula = differential ~ DefYards + OffenseAvg + OffensiveYards,
data = model3)
model3 <- lm(formula = differential ~ DefYards + OffenseAvg + OffensiveYards,
data = less_seven)
summary(model3)
rm(list = "fit", "logs", "less_seven", "model1", "model2", "model3", "newcorrelations", "rebounds", "rebounds_turnovers", "simplelogs", "cormatrix", "correlations")
#libraries
library(tidyverse)
library(tidycensus)
library(janitor)
library(lubridate)
#install.packages("ipumsr")
library(ipumsr)
rm(list = "state_2021")
rm(list = "states_2021")
View(conf_player_counts)
View(conference_md)
View(conf_player_counts)
View(conference_md)
View(conf_player_counts)
View(conference_md)
View(conf_player_counts)
View(conference_md)
from_maryland_p5 %>%
group_by(hometown_clean) %>%
count()
from_maryland_p5 %>%
group_by(hometown_clean) %>%
count()
all_md_players <-  wbb_rosters_22_23 %>%
filter(state_clean == "MD") %>%
group_by(hometown_clean) %>%
count() %>%
arrange(desc(n))
summary(all_md_players)
all_md_players <-  wbb_rosters_22_23 %>%
filter(state_clean == "MD") %>%
group_by(hometown_clean) %>%
count() %>%
arrange(desc(n))
view(all_md_players)
from_maryland_p5 %>%
group_by(hometown_clean) %>%
count() %>%
arrange(desc(n))
# Power 5 players from Maryland
from_maryland_p5 <- from_maryland_p5 %>%
group_by(hometown_clean) %>%
count() %>%
arrange(desc(n))
View(from_maryland_p5)
from_maryland_p5 <-  wbb_rosters_22_23 %>%
filter(conference %in% power_five, state_clean == "MD")
View(from_maryland_p5)
md_p5_hometown <- from_maryland_p5 %>%
group_by(hometown_clean) %>%
count() %>%
arrange(desc(n))
View(divison_breakdown)
md_divison_breakdown <- wbb_rosters_22_23 %>%
filter(state_clean == "MD") %>%
group_by(division) %>%
count() %>%
arrange(desc(n))
rm(list = "division_breakdown")
rm(list = "divison_breakdown", "md_divison_breakdown")
md_division_breakdown <- wbb_rosters_22_23 %>%
filter(state_clean == "MD") %>%
group_by(division) %>%
count() %>%
arrange(desc(n))
#All Players from Maryland
all_md_players_hometown <-  wbb_rosters_22_23 %>%
filter(state_clean == "MD") %>%
group_by(hometown_clean) %>%
count() %>%
arrange(desc(n))
rm(list="all_md_players")
View(md_division_breakdown)
md_division_breakdown %>%
group_by(division) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
md_division_breakdown %>%
group_by(n) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
md_division_breakdown %>%
group_by(division) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
md_division_breakdown %>%
group_by(division) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
md_division_breakdown %>%
group_by(division) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
md_division_breakdown %>%
group_by(division) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
b
md_division_breakdown %>%
summarize(p5_perc = 24/sum(n))
md_division_breakdown %>%
summarize(p5_perc = 24/sum(n))
md_division_breakdown %>%
summarize(p5_perc = 24/sum(n))
md_division_breakdown %>%
summarize(p5_perc = 24/sum(n))
md_division_breakdown %>% %>%
md_division_breakdown %>%
group_by(n) %>%
summarize(p5_perc = 24/sum(n))
1
md_d1_p5_perc = (24/133)*100
from_maryland_p5 %>%
group_by(team)
from_maryland_p5 %>%
group_by(team) %>%
count(n)
from_maryland_p5 %>%
group_by(team) %>%
count()
from_maryland_p5 %>%
group_by(team) %>%
count() %>%
arrange(desc(n))
total_p5_players <- wbb_rosters_22_23 %>%
filter(conference %in% power_five)
#Conference counts with percentages
conf_player_counts <- total_p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
#Conference counts with percentages
conf_player_counts <- total_p5_players %>%
group_by(conference) %>%
summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(perc = round(total/sum(total)*100,1))
conference_md <- from_maryland_p5 %>%
group_by(conference) %>%
count()
View(from_maryland_p5)
rm(list="md_2021")
View(md_2022)
md_2022 <- get_acs(geography = "place",
variables = c(population = "B01003_001"),
state = "MD",
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
#API key
Sys.setenv(CENSUS_API_KEY = "5cb2b9c628a1d1329c5bf4d36fe4435c6501efc8", overwrite = TRUE)
#API key
Sys.setenv(CENSUS_API_KEY = "5cb2b9c628a1d1329c5bf4d36fe4435c6501efc8", overwrite = TRUE)
#Get this to show the population data of all the Maryland towns
md_2022 <- get_acs(geography = "place",
variables = c(population = "B01003_001"),
state = "MD",
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
states_2022 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
View(states_2022)
View(state_counts)
View(states_2022)
View(usa_2021)
usa_2022 <- get_acs(geography = "state",
variables = c(population = "B01003_001"),
survey = "acs1",
year = 2022) %>%
mutate(year = 2022)
rm(list="usa_2021", "states_2022")
