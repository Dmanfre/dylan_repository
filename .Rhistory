parity_index24 |>
filter(Conference == 'Big Ten WBB' ) |>
ggplot() +
geom_point(aes(x=srs_score, y = sos_score, label = Team)) +
geom_text(aes(x=srs_score, y = sos_score, label = Team))
parity_index24 |>
filter(Conference == 'MAAC WBB' ) |>
ggplot() +
geom_point(aes(x=srs_score, y = sos_score, label = Team)) +
geom_text(aes(x=srs_score, y = sos_score, label = Team))
parity_index24 |>
filter(Conference == 'Big Ten WBB' ) |>
ggplot() +
geom_point(aes(x=srs_score, y = sos_score, label = Team)) +
geom_text(aes(x=srs_score, y = sos_score, label = Team))
parity_with_top25 <- parity_index24 |> left_join(rankings, join_by(Team == team))
combined_data <- bind_rows(parity_index24 |> mutate(season="2024"), parity_index23 |> mutate(season = "2023"))
result <- combined_data %>%
group_by(Team) %>%
summarize(
Parity_Index_2024 = mean(parity_index[season == "2024"]),
Parity_Index_2023 = mean(parity_index[season == "2023"])
) %>%
filter(!is.na(Parity_Index_2024)) |>
filter(!is.na(Parity_Index_2023)) |>
ungroup() %>%
summarise(
p_value = t.test(Parity_Index_2024, Parity_Index_2023, paired = TRUE)$p.value,
mean_difference = mean(Parity_Index_2024 - Parity_Index_2023)
)
View(combined_data)
View(result)
library(wehoop)
library(tidyverse)
years<- c(2023, 2022, 2021)
player_logs <- load_wbb_player_box(seasons = years)
player_logs %>%
filter(team_display_name == "Princeton Tigers")
princeton_logs <- player_logs %>%
filter(team_display_name == "Princeton Tigers")
View(player_logs)
View(princeton_logs)
princeton_logs %>%
filter(athlete_display_name == "Kaitlyn Chen")
chen <- princeton_logs %>%
filter(athlete_display_name == "Kaitlyn Chen")
View(chen)
chen %>%
mutate(win_above_average = case_when(
team_winner == "TRUE" & pts >= 20 ~ "1",
team_winner == "FALSE" & pts >= 20 ~ "0"
))
chen %>%
mutate(win_above_average = case_when(
team_winner == "TRUE" & points >= 20 ~ "1",
team_winner == "FALSE" & points >= 20 ~ "0"
))
chen %>%
mutate(win_above_average = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(wins)
chen %>%
mutate(win_above_average = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(win_above_average) %>%
summarize(wins_loss = n())
chen %>%
mutate(win_above_average = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(win_above_average) %>%
summarize(wins_loss = n())
chen %>%
mutate(win_above_average = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss"
)) %>%
group_by(win_above_average) %>%
summarize(wins_loss = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss"
)) %>%
group_by(win_above_average) %>%
summarize(wins_loss = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(wins_loss = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss",
team_winner == "TRUE" & points <= 10 ~ "win",
team_winner == "FALSE" & points <= 10 ~ "win"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n(),
at_least_10p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss",
team_winner == "TRUE" & points <= 10 ~ "win",
team_winner == "FALSE" & points <= 10 ~ "win"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n(),
fewer_than_10p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss",
team_winner == "TRUE" & points <= 10 ~ "win",
team_winner == "FALSE" & points <= 10 ~ "win"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n(),
fewer_than_10p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss",
team_winner == "TRUE" & points <= 10 ~ "win",
team_winner == "FALSE" & points <= 10 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n(),
fewer_than_10p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 14 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 30 ~ "win",
team_winner == "FALSE" & points >= 14 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 30 ~ "win",
team_winner == "FALSE" & points >= 30 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_14p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss",
team_winner == "TRUE" & points <= 20 ~ "win",
team_winner == "FALSE" & points <= 20 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_20p = n(),
less_20p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_20p = n())
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_20p = n())
conferences <- espn_wbb_conferences()
View(conferences)
conference <- ncaa_wbb_teams(year = years, division = 1)
conference <- ncaa_wbb_teams()
conference <- ncaa_wbb_teams(year = most_recent_wbb_season(), division = 1)
conference <- ncaa_wbb_teams(year = years, division = 1)
conference <- ncaa_wbb_teams(year = years, division = 1)
conference <- load_wbb_schedule(seasons = most_recent_wbb_season(),
conference <- load_wbb_schedule(seasons = most_recent_wbb_season(),
conference <- load_wbb_schedule(seasons = years)
conference <- load_wbb_schedule(seasons = years)
conference <- load_wbb_schedule(seasons = years)
years<- c(2023, 2022, 2021)
player_logs <- load_wbb_player_box(seasons = years)
princeton_logs <- player_logs %>%
filter(team_display_name == "Princeton Tigers")
chen <- princeton_logs %>%
filter(athlete_display_name == "Kaitlyn Chen")
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_20p = n())
conference <- load_wbb_schedule(seasons = years)
View(conference)
View(player_logs)
ivy <- c("Princeton", "Harvard", "Cornell", "Dartmouth", "Yale", "Columbia", "Brown", "Penn")
#adding confernece
player_logs %>%
mutate(confernece = ivy)
player_logs %>%
mutate(confernece = "ivy")
player_logs %>%
mutate(confernece = case_when,
confernece %in% ivy ~ "Ivy")
player_logs %>%
mutate(confernece = case_when(
confernece %in% ivy ~ "Ivy"))
player_logs %>%
mutate(confernece = case_when(
confernece %in% ivy ~ "Ivy"))
player_logs %>%
mutate(conference = case_when(
conference %in% ivy ~ "Ivy"
))
player_logs %>%
mutate(conference = case_when(
conference %in% ivy ~ "Ivy"
))
player_logs %>%
mutate(conference = case_when(
team_short_display_name %in% ivy ~ "Ivy"
))
player_logs %>%
mutate(conference = case_when(
team_short_display_name %in% ivy ~ "Ivy"
)) %>%
select(team_short_display_name, conference)
player_logs %>%
mutate(conference = case_when(
team_short_display_name %in% ivy ~ "Ivy"
)) %>%
select(team_short_display_name, conference) %>%
filter(conference == "Ivy")
player_logs %>%
mutate(conference = case_when(
team_short_display_name %in% ivy ~ "Ivy"
)) %>%
select(team_short_display_name, conference) %>%
filter(conference == "Ivy") %>%
distinct(team_short_display_name)
player_logs <- player_logs %>%
mutate(conference = case_when(
team_short_display_name %in% ivy ~ "Ivy"
))
library(wehoop)
library(tidyverse)
ivy <- c("Princeton", "Harvard", "Cornell", "Dartmouth", "Yale", "Columbia", "Brown", "Penn")
years<- c(2023, 2022, 2021)
player_logs <- load_wbb_player_box(seasons = years)
#adding confernece and checking that it worked
player_logs <- player_logs %>%
mutate(conference = case_when(
team_short_display_name %in% ivy ~ "Ivy"
))
princeton_logs <- player_logs %>%
filter(team_display_name == "Princeton Tigers")
chen <- princeton_logs %>%
filter(athlete_display_name == "Kaitlyn Chen")
chen %>%
mutate(game_result = case_when(
team_winner == "TRUE" & points >= 20 ~ "win",
team_winner == "FALSE" & points >= 20 ~ "loss"
)) %>%
group_by(game_result) %>%
summarize(at_least_20p = n())
View(player_logs)
player_logs %>%
filter(season == "2022" & confernece == "Ivy")
player_logs %>%
filter(season == "2022" & conference == "Ivy")
player_logs %>%
filter(season == "2022" & team_short_display_name == "Princeton") %>%
group_by(athlete_display_name) %>%
summarise(points = mean(points))
player_logs %>%
filter(season == "2022" & team_short_display_name == "Princeton") %>%
filter(active == "TRUE") %>%
group_by(athlete_display_name) %>%
summarise(points = mean(points))
player_logs %>%
filter(season == "2022" & team_short_display_name == "Princeton") %>%
filter(active == "TRUE") %>%
group_by(athlete_display_name) %>%
summarise(points = mean(points))
player_logs %>%
filter(season == "2022" & team_short_display_name == "Princeton" & did_not_play == "FALSE") %>%
group_by(athlete_display_name) %>%
summarise(points = mean(points))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name) %>%
summarise(points = mean(points))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points))
(assists
player_logs %>%
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2022" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted),
fg_perc = field_goals_made/field_goals_attempted) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
mutate(fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", team_short_display_name == "Princeton") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
mutate(fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", team_short_display_name == "Princeton") %>%
group_by(season, athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
mutate(fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", team_short_display_name == "Princeton") %>%
group_by(season, athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
mutate(fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", team_short_display_name == "Princeton") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
mutate(fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", team_short_display_name == "Princeton") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
mutate(fg_perc = (field_goals_made/field_goals_attempted)*100)
player_logs %>%
player_logs %>%
player_logs %>%
ivy_logs <- player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
ivy_logs <- player_logs %>%
filter(season == "2023" & did_not_play == "FALSE", conference == "Ivy") %>%
group_by(athlete_display_name, athlete_position_abbreviation, team_short_display_name) %>%
summarise(points = mean(points),
assists = mean(assists),
rebounds = mean(rebounds),
avg_fgm = mean(field_goals_made),
avg_fga = mean(field_goals_attempted),
avg_3pm = mean(three_point_field_goals_made),
avg_3pa = mean(three_point_field_goals_attempted)) %>%
arrange(desc(points))
View(chen)
setwd("~/Documents/GitHub/dylan_repository")
ncaa_ids <- read.csv("ncaa_ids.csv")
View(ncaa_ids)
