table <- table[[1]] |> rename(Game=X1, Date=X2, HomeAway=X3, Opponent=X4, W_L=X5, TeamScore=X6, OpponentScore=X7, TeamFG=X8, TeamFGA=X9, TeamFGPCT=X10, Team3P=X11, Team3PA=X12, Team3PPCT=X13, TeamFT=X14, TeamFTA=X15, TeamFTPCT=X16, TeamOffRebounds=X17, TeamTotalRebounds=X18, TeamAssists=X19, TeamSteals=X20, TeamBlocks=X21, TeamTurnovers=X22, TeamPersonalFouls=X23, Blank=X24, OpponentFG=X25, OpponentFGA=X26, OpponentFGPCT=X27, Opponent3P=X28, Opponent3PA=X29, Opponent3PPCT=X30, OpponentFT=X31, OpponentFTA=X32, OpponentFTPCT=X33, OpponentOffRebounds=X34, OpponentTotalRebounds=X35, OpponentAssists=X36, OpponentSteals=X37, OpponentBlocks=X38, OpponentTurnovers=X39, OpponentPersonalFouls=X40) |> filter(Game != "") |> filter(Game != "G") |> mutate(Team=team, Conference=conference) |> mutate_at(vars(-Team, -Conference, -Date, -Opponent, -HomeAway, -W_L), as.numeric) |> mutate(Date = ymd(Date))
# step 2.
page <- read_html("https://www.sports-reference.com/cbb/schools/maryland/women/2023.html")
team <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/h1/span[2]') |>
html_text()
conference <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/p[1]/a') |>
html_text()
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header=FALSE)
table <- table[[1]] |> rename(Game=X1, Date=X2, HomeAway=X3, Opponent=X4, W_L=X5, TeamScore=X6, OpponentScore=X7, TeamFG=X8, TeamFGA=X9, TeamFGPCT=X10, Team3P=X11, Team3PA=X12, Team3PPCT=X13, TeamFT=X14, TeamFTA=X15, TeamFTPCT=X16, TeamOffRebounds=X17, TeamTotalRebounds=X18, TeamAssists=X19, TeamSteals=X20, TeamBlocks=X21, TeamTurnovers=X22, TeamPersonalFouls=X23, Blank=X24, OpponentFG=X25, OpponentFGA=X26, OpponentFGPCT=X27, Opponent3P=X28, Opponent3PA=X29, Opponent3PPCT=X30, OpponentFT=X31, OpponentFTA=X32, OpponentFTPCT=X33, OpponentOffRebounds=X34, OpponentTotalRebounds=X35, OpponentAssists=X36, OpponentSteals=X37, OpponentBlocks=X38, OpponentTurnovers=X39, OpponentPersonalFouls=X40) |> filter(Game != "") |> filter(Game != "G") |> mutate(Team=team, Conference=conference) |> mutate_at(vars(-Team, -Conference, -Date, -Opponent, -HomeAway, -W_L), as.numeric) |> mutate(Date = ymd(Date))
table <- table[[1]] |> rename(Game=X1, Date=X2, HomeAway=X3, Opponent=X4, W_L=X5, TeamScore=X6, OpponentScore=X7, TeamFG=X8, TeamFGA=X9, TeamFGPCT=X10, Team3P=X11, Team3PA=X12, Team3PPCT=X13, TeamFT=X14, TeamFTA=X15, TeamFTPCT=X16, TeamOffRebounds=X17, TeamTotalRebounds=X18, TeamAssists=X19, TeamSteals=X20, TeamBlocks=X21, TeamTurnovers=X22, TeamPersonalFouls=X23, Blank=X24, OpponentFG=X25, OpponentFGA=X26, OpponentFGPCT=X27 |> filter(Game != "") |> filter(Game != "G") |> mutate(Team=team, Conference=conference) |> mutate_at(vars(-Team, -Conference, -Date, -Opponent, -HomeAway, -W_L), as.numeric) |> mutate(Date = ymd(Date)))
table <- table[[1]] |> rename(Game=X1, Date=X2, HomeAway=X3, Opponent=X4, W_L=X5, TeamScore=X6, OpponentScore=X7, TeamFG=X8, TeamFGA=X9, TeamFGPCT=X10, Team3P=X11, Team3PA=X12, Team3PPCT=X13, TeamFT=X14, TeamFTA=X15, TeamFTPCT=X16, TeamOffRebounds=X17, TeamTotalRebounds=X18, TeamAssists=X19, TeamSteals=X20, TeamBlocks=X21, TeamTurnovers=X22, TeamPersonalFouls=X23, Blank=X24, OpponentFG=X25, OpponentFGA=X26 |> filter(Game != "") |> filter(Game != "G") |> mutate(Team=team, Conference=conference) |> mutate_at(vars(-Team, -Conference, -Date, -Opponent, -HomeAway, -W_L), as.numeric) |> mutate(Date = ymd(Date)))
table <- table[[1]] |> slice(-1)
View(table)
table <- table[[1]] |> slice(-1, -13)
table <- table[[1]] |> slice(-1) %>% slice(-13)
table <- table[[1]] %>%  slice(-13)
table <- table[[1]] |> rename(Game=X1, Date=X2, HomeAway=X3, Opponent=X4, W_L=X5, TeamScore=X6, OpponentScore=X7, TeamFG=X8, TeamFGA=X9, TeamFGPCT=X10, Team3P=X11, Team3PA=X12, Team3PPCT=X13, TeamFT=X14, TeamFTA=X15, TeamFTPCT=X16, TeamOffRebounds=X17, TeamTotalRebounds=X18, TeamAssists=X19, TeamSteals=X20, TeamBlocks=X21, TeamTurnovers=X22, TeamPersonalFouls=X23, Blank=X24, OpponentFG=X25, OpponentFGA=X26 |>
filter(Game != "")
|> filter(Game != "G") |>
mutate(Team=team, Conference=conference) |> mutate_at(vars(-Team, -Conference, -Date, -Opponent, -HomeAway, -W_L), as.numeric) |> mutate(Date = ymd(Date)))
table <- table[[1]] |> rename(Game=X1)
table <- table %>%
rename(Game=X1)
players <- read_csv("https://thescoop.org/sports-data-files/players20.csv")
View(players)
players <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")
View(players)
table <- table %>%
rename(Rk = X1, Player=X2, GP = X3, GS =X4, )
library(tidyverse)
library(wehoop)
library(rvest)
url <- "https://www.sports-reference.com/cbb/schools/maryland/women/2023.html"
#step 1
school <- url |>
read_html() |>
html_nodes(xpath = '//*[@id="basic_school_stats"]') |>
html_nodes("a") |>
html_attr('href')
# produced a list of 361
# step 2.
page <- read_html("https://www.sports-reference.com/cbb/schools/maryland/women/2023.html")
team <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/h1/span[2]') |>
html_text()
conference <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/p[1]/a') |>
html_text()
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header=FALSE)
table <- table %>%
rename(Rk = X1, Player=X2, GP = X3, GS =X4, )
table <- table %>%
rename(Rk = X1, Player=X2, GP = X3, GS =X4, )
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header=FALSE)
table <- table %>%
rename(Rk = X1, Player=X2, GP = X3, GS =X4, )
table <- table[[1]] %>%
rename(Rk = X1, Player=X2, GP = X3, GS =X4, )
View(table)
table %>%
slice(-14)
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
View(table[[1]])
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE, skip = 1)
# step 2.
page <- read_html("https://www.sports-reference.com/cbb/schools/maryland/women/2023.html")
team <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/h1/span[2]') |>
html_text()
conference <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/p[1]/a') |>
html_text()
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE, skip = 1)
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE, skip = 1)
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE, skip = 1)
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
# Use the first row as headers and remove it from the data
header <- table[[1, ]]
data <- table[-1, ]
# Set the headers for the data
colnames(data) <- header
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
# Use the first row as headers and remove it from the data
header <- table
data <- table[-1, ]
data <- table[-1]
# Set the headers for the data
colnames(data) <- header
# Set the headers for the data
colnames(data) <- header
View(table)
View(table[[1]])
# Use the first row as headers and remove it from the data
header <- table[[1]]
data <- table[-1]
# Set the headers for the data
colnames(data) <- header
data <- table[-1, ]
# Set the headers for the data
colnames(data) <- header
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
# Use the first row as headers and remove it from the data
header <- table[[1, ]]
# step 2.
page <- read_html("https://www.sports-reference.com/cbb/schools/maryland/women/2023.html")
team <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/h1/span[2]') |>
html_text()
conference <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/p[1]/a') |>
html_text()
# Assuming page is your HTML content
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
# Use the first row as headers and remove it from the data
header <- table[[1, ]]
# Use the first row as headers and remove it from the data
header <- table[[1]]
data <- as.data.frame(table[-1, ])
data <- as.data.frame(table[-1])
# Set the headers for the data
colnames(data) <- header
# Assuming your dataframe is named 'tables'
# Use the second row as column names
colnames(tables) <- tables[2, ]
# Assuming page is your HTML content
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
# Assuming your dataframe is named 'tables'
# Use the second row as column names
colnames(table) <- table[2, ]
# Assuming your dataframe is named 'tables'
# Use the second row as column names
colnames(table) <- table[2 ]
# Assuming your dataframe is named 'tables'
# Use the second row as column names
colnames(table) <- table[2 ]
# Remove the second row from the dataframe
tables <- tables[-2, ]
# Remove the second row from the dataframe
table <- table[-2, ]
# step 2.
page <- read_html("https://www.sports-reference.com/cbb/schools/maryland/women/2023.html")
team <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/h1/span[2]') |>
html_text()
conference <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/p[1]/a') |>
html_text()
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
players <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")
View(players)
players %>%
select(end_year, player, team, ncaa_conference, ncaa_division, gp, mp, assist_to_turnover_ratio)
players %>%
select(end_year, player, team, ncaa_conference, ncaa_division, gp, mp, ast_tov_ratio)
r
players <- players %>%
select(end_year, player, team, ncaa_conference, ncaa_division, gp, mp, ast, tov, ast_tov_ratio)
View(players)
players <- players %>%
select(end_year, player, team, ncaa_conference, ncaa_division, gp, mp, ast, tov, ast_tov_ratio) %>%
filter(team == "Maryland")
View(players)
players <- players %>%
select(end_year, player, team, ncaa_conference, ncaa_division, gp, mp, ast, tov, ast_tov_ratio)
players <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")
players <- players %>%
select(end_year, player, team, ncaa_conference, ncaa_division, gp, mp, ast, tov, ast_tov_ratio)
View(players)
library(tidyverse)
library(wehoop)
library(rvest)
View(table)
# step 2.
page <- read_html("https://www.sports-reference.com/cbb/schools/maryland/women/2023.html")
team <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/h1/span[2]') |>
html_text()
conference <- page |>
html_nodes(xpath = '//*[@id="meta"]/div[2]/p[1]/a') |>
html_text()
table <- page |>
html_nodes(xpath = '//*[@id="totals"]') |>
html_table(header = FALSE)
View(table)
table <- table[[1]]
table <- table[[1]] %>%
mutate(team = team)
table <- table[[1]] %>%
mutate(Team = team)
table <- table[[1]] %>%
mutate(Team = team,
confernece = conference)
table <- table[[1]] %>%
table %>%
mutate(Team = team,
confernece = conference)
table %>%
mutate(Team = team,
confernece = conference)
install.packages("hoopR")
library(hoopR)
library(hoopR)
library(tidyverse)
lineups <-  nba_teamdashlineups(team_id = '1610612752', season = year_to_season(most_recent_nba_season(2023) - 1))
lineups <-  nba_teamdashlineups(team_id = '1610612752', season = year_to_season(most_recent_nba_season() - 1))
View(lineups)
lineups <-  nba_teamdashlineups(team_id = 1610612752)[[2]]
lineups <-  nba_teamdashlineups(team_id = 1610612752)[[2]]
View(lineups)
lineups <- lineups %>%
mutate_at(vars(starts_with("GP")), as.numeric)
lineups <- lineups %>%
lineups <- lineups %>%
mutate_at(vars((4:num_columns)), as.numeric())
lineups <- lineups %>%
mutate_at(vars(num_range("GP", num_columns(4):ncol(lineups))), as.numeric)
lineups <- lineups %>%
mutate(across(starts_with("GP"):ncol(lineups), as.numeric))
head(lineups)
lineups %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(MIN))
options(scipen=999)
lineups %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(MIN))
lineups %>%
filter(str_detect(GROUP_NAME, "Hartenstein"))
lineups %>%
filter(str_detect(GROUP_NAME, "Hartenstein")) %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(MIN))
lineups %>%
filter(str_detect(GROUP_NAME, "Hartenstein")) %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(PLUS_MINUS))
lineups %>%
filter(str_detect(GROUP_NAME, "Hartenstein")) %>%
fitler(MIN != 0) %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(PLUS_MINUS))
lineups %>%
filter(str_detect(GROUP_NAME, "Hartenstein")) %>%
filter(MIN != 0) %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(PLUS_MINUS))
lineups %>%
filter(str_detect(GROUP_NAME, "Hartenstein")) %>%
filter(MIN != 0) %>%
select(GROUP_NAME, GP, MIN, PLUS_MINUS) %>%
arrange(desc(MIN))
9
9
library(tidyverse)
setwd("~/Documents/GitHub/dylan_repository")
alexander_logs <- read_csv("alexander-logs.csv")
View(alexander_logs)
alexander_logs %>%
rename(winloss = ...8)
alexander_logs %>%
rename(winloss = ...8,
home_away - ...5)
alexander_logs %>%
rename(winloss = ...8,
home_away = ...5)
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5)
alexander_logs %>%
mutate(home_away = case_when,
home_away = NA ~ "H",
TRUE ~ home_away)
alexander_logs %>%
mutate(home_away = case_when(
is.na(home_away) ~ "H",
TRUE ~ as.character(home_away)
))
alexander_logs <- alexander_logs %>%
mutate(home_away = case_when(
is.na(home_away) ~ "H",
TRUE ~ as.character(home_away)
))
alexander_logs %>%
slice(108)
alexander_logs %>%
slice(-108)
alexander_logs <- alexander_logs %>%
slice(-108)
# home games
home_games <- alexander_logs %>%
filter(home_away == "H" & Type != "NCAA")
View(home_games)
ncaa_tourney <- alexander_logs %>%
filter(Type == "NCAA")
#away_games
away_games <- alexander_logs %>%
filter(home_away == "@" & Type != "NCAA")
library(tidyverse)
#data
alexander_logs <- read_csv("alexander-logs.csv")
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5)
alexander_logs <- alexander_logs %>%
mutate(home_away = case_when(
is.na(home_away) ~ "H",
TRUE ~ as.character(home_away)
))
alexander_logs <- alexander_logs %>%
slice(-108)
# home games not including NCAA tournaments
home_games <- alexander_logs %>%
filter(home_away == "H" & Type != "NCAA")
ncaa_tourney <- alexander_logs %>%
filter(Type == "NCAA")
#away_games
away_games <- alexander_logs %>%
filter(home_away == "@" & Type != "NCAA")
View(alexander_logs)
alexander_logs %>%
filter(type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS))
alexander_logs %>%
filter(Type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS))
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
)
optim(9999)
options(scipen = 999)
options(scipen = 999)
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
)
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_3s = mean(3P),
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL))
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL)) %>%
pivot_wider(names_from = home_away, id_cols = NULL)
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL)) %>%
pivot_wider(names_from = home_away, id_cols = NULL, value = home_away)
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL)) %>%
pivot_wider(names_from = home_away, id_cols = NULL, value = avg_pts)
alexander_logs %>%
filter(Type != "NCAA" & School == "Maryland") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL))
alexander_logs %>%
filter(Type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL))
#data
alexander_logs <- read_csv("alexander-logs.csv")
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5,
)
View(alexander_logs)
#data
alexander_logs <- read_csv("alexander-logs.csv")
View(alexander_logs)
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5,
)
alexander_logs <- alexander_logs %>%
mutate(home_away = case_when(
is.na(home_away) ~ "H",
TRUE ~ as.character(home_away)
))
alexander_logs <- alexander_logs %>%
slice(-108)
library(tidyverse)
options(scipen = 999)
#data
alexander_logs <- read_csv("alexander-logs.csv")
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5,
)
alexander_logs <- alexander_logs %>%
mutate(home_away = case_when(
is.na(home_away) ~ "H",
TRUE ~ as.character(home_away)
))
alexander_logs %>%
filter(Type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL))
alexander_logs %>%
filter(Type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL),
avg_3pt = mean(3P))
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5,
three_p = 3P
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5,
three_p = 3P
#data
alexander_logs <- read_csv("alexander-logs.csv")
View(alexander_logs)
library(janitor)
alexander_logs <- alexander_logs %>%
rename(winloss = ...8,
home_away = ...5
) %>%
clean_names()
alexander_logs %>%
filter(Type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL),
avg_3pt_perc = mean(three_p_percent))
alexander_logs %>%
filter(type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL),
avg_3pt_perc = mean(three_p_percent))
alexander_logs <- alexander_logs %>%
mutate(home_away = case_when(
is.na(home_away) ~ "H",
TRUE ~ as.character(home_away)
))
alexander_logs %>%
filter(type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(PTS),
avg_ast = mean(AST),
avg_steal = mean(STL),
avg_3pt_perc = mean(three_p_percent))
alexander_logs %>%
filter(type != "NCAA") %>%
group_by(home_away) %>%
summarize(avg_pts = mean(pts),
avg_ast = mean(ast),
avg_steal = mean(stl),
avg_3pt_perc = mean(three_p_percent))
